@using TodoMVC.Models
@model IEnumerable<TodoMVC.Models.Task>

@{
    ViewBag.Title = "TODOアプリ";
}

<style scoped>
    .deleteTask, .drag, .editTask {
        cursor: pointer;
        color: blue;
    }

    .done {
        text-decoration: line-through;
        color: gray;
    }
</style>

<h1>@ViewBag.Title</h1>

<ul id="tasks">
    @foreach (var item in Model) {
        <li id="task_@item.id" data-id="@item.id">
            <input type="checkbox" class="checkTask" @(item.type == Task.TYPE_DONE ? "checked" : "") />
            <span class="@item.type">@Html.DisplayFor(modelItem => item.title)</span>
            <span class="@(item.type == Task.TYPE_DONE ? "" : "editTask") ">[編集]</span>
            <span class="deleteTask">[削除]</span>
            <span class="drag">[drag]</span>
        </li>
    }
</ul>

@section scripts{
    <script>
        $(function () {

            $(document).on('click', '.editTask', function () {
                var id = $(this).parent().data("id");
                var title = $(this).prev().text();
                $('#task_' + id)
                    .empty()
                    .append($('<input type="text">').val(title))
                    .append('<input type="button" value="更新" class="updateTask">');
                $('#task_' + id + ' input:eq[0]').focus();
            });

            $(document).on('click', '.updateTask', function () {
                var id = $(this).parent().data("id");
                var title = $(this).prev().val();
                $.post('@Url.Action("AjaxEditTask")', {
                    id: id,
                    title: title
                }, function (rs) {
                    var e = $(
                            '<input type="checkbox" class="checkTask" >' +
                            '<span></span> ' +
                            '<span class="editTask">[編集]</span> ' +
                            '<span class="deleteTask">[削除]</span> ' +
                            '<span class="drag">[drag]</span>'
                        );
                    $('#task_' + id).empty().append(e).find('span:eq(0)').text(title);
                });

            });

            $('#tasks').sortable({
                axis: 'y',
                opacity: 0.2,
                handle: '.drag',
                update: function () {
                    $.post('@Url.Action("AjaxSortTask")', {
                        task: $(this).sortable('serialize')
                    });
                }
            });

            $(document).on('click', '.checkTask', function () {
                var id = $(this).parent().data("id");
                var title = $(this).next();
                $.post('@Url.Action("AjaxCheckTask")', {
                    id: id
                }, function (rs) {
                    if (title.hasClass('done')) {
                        title.removeClass('done');
                    } else {
                        title.addClass('done');
                    }
                });
            });

            $(document).on('click', '.deleteTask', function () {
                if (confirm('本当に削除しますか？')) {
                    var id = $(this).parent().data("id");
                    $.post('@Url.Action("AjaxDeleteTask")', {
                        id: id
                    }, function (rs) {
                        $('#task_' + id).fadeOut(800);
                    });
                }
            });
        });
    </script>
}